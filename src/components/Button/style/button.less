@component: yc-button;
.@{component} {
  cursor: pointer;
  user-select: none;
  outline: none;
  border: 1px solid transparent;
  font-weight: 400;
  transition: all 0.1s cubic-bezier(0, 0, 1, 1);
  display: inline-flex;
  justify-content: center;
  align-items: center;

  .@{component}-icon {
    flex-shrink: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    .yc-spin {
      font-size: inherit;
      color: inherit;
    }
  }
}

// loading
.@{component}-loading,
.@{component}-disabled {
  cursor: default;
  position: relative;

  &::before {
    content: '';
    display: block;
    z-index: 1;
    position: absolute;
    inset: -1px;
    background-color: #fff;
    opacity: 0.4;
  }
  &.@{component}-disabled {
    cursor: not-allowed;
  }
}
// loading
.@{component}-long {
  width: 100%;
}
// only-icon
.@{component}-only-icon {
  padding: 0;
  .@{component}-icon {
    margin: 0;
  }
}

// type
@colors: {
  primary: rgb(22, 93, 255);
  primary-hover: rgb(64, 128, 255);
  primary-active: rgb(14, 66, 210);
  warning: rgb(255, 125, 0);
  warning-hover: rgb(255, 154, 46);
  warning-active: rgb(210, 95, 0);
  success: rgb(0, 180, 42);
  success-hover: rgb(35, 195, 67);
  success-active: rgb(0, 154, 41);
  danger: rgb(245, 63, 63);
  danger-hover: rgb(247, 101, 96);
  danger-active: rgb(203, 39, 45);
  text: rgb(78, 89, 105);
  text-hover: rgb(242, 243, 245);
  text-active: rgb(229, 230, 235);
  secondary-bg: rgb(242, 243, 245);
  secondary-hover: rgb(229, 230, 235);
  secondary-active: rgb(201, 205, 212);
  dashed-border: rgb(229, 230, 235);
  dashed-border-hover: rgb(201, 205, 212);
  dashed-border-active: rgb(169, 174, 184);
};
@type: {
  @primary: {
    @normal: {
      bg: @colors[primary];
      hover: @colors[primary-hover];
      active: @colors[primary-active];
      text: #fff;
    };
    @warning: {
      bg: @colors[warning];
      hover: @colors[warning-hover];
      active: @colors[warning-active];
      text: #fff;
    };
    @success: {
      bg: @colors[success];
      hover: @colors[success-hover];
      active: @colors[success-active];
      text: #fff;
    };
    @danger: {
      bg: @colors[danger];
      hover: @colors[danger-hover];
      active: @colors[danger-active];
      text: #fff;
    };
  };
  @secondary: {
    @normal: {
      bg: @colors[secondary-bg];
      hover: @colors[secondary-hover];
      active: @colors[secondary-active];
      text: @colors[text];
    };
    @warning: {
      bg: rgb(255, 247, 232);
      hover: rgb(255, 228, 186);
      active: rgb(255, 207, 139);
      text: @colors[warning];
    };
    @success: {
      bg: rgb(232, 255, 234);
      hover: rgb(175, 240, 181);
      active: rgb(123, 225, 136);
      text: @colors[success];
    };
    @danger: {
      bg: rgb(255, 236, 232);
      hover: rgb(253, 205, 197);
      active: rgb(251, 172, 163);
      text: @colors[danger];
    };
  };
  @dashed: {
    @normal: {
      bg: @colors[secondary-bg];
      hover: @colors[secondary-hover];
      active: @colors[secondary-active];
      border: @colors[dashed-border];
      border-hover: @colors[dashed-border-hover];
      border-active: @colors[dashed-border-active];
      text: @colors[text];
    };
    @warning: {
      bg: rgb(255, 247, 232);
      hover: rgb(255, 228, 186);
      active: rgb(255, 207, 139);
      border: rgb(255, 228, 186);
      border-hover: rgb(255, 207, 139);
      border-active: rgb(255, 182, 93);
      text: @colors[warning];
    };
    @success: {
      bg: rgb(232, 255, 234);
      hover: rgb(175, 240, 181);
      active: rgb(123, 225, 136);
      border: rgb(175, 240, 181);
      border-hover: rgb(123, 225, 136);
      border-active: rgb(76, 210, 99);
      text: @colors[success];
    };
    @danger: {
      bg: rgb(255, 236, 232);
      hover: rgb(253, 205, 197);
      active: rgb(251, 172, 163);
      border: rgb(253, 205, 197);
      border-hover: rgb(251, 172, 163);
      border-active: rgb(249, 137, 129);
      text: @colors[danger];
    };
  };
  @outline: {
    @normal: {
      bg: transparent;
      border: @colors[primary];
      border-hover: @colors[primary-hover];
      border-active: @colors[primary-active];
      text: @colors[primary];
      text-hover: @colors[primary-hover];
      text-active: @colors[primary-active];
    };
    @warning: {
      bg: transparent;
      border: @colors[warning];
      border-hover: @colors[warning-hover];
      border-active: @colors[warning-active];
      text: @colors[warning];
      text-hover: @colors[warning-hover];
      text-active: @colors[warning-active];
    };
    @success: {
      bg: transparent;
      border: @colors[success];
      border-hover: @colors[success-hover];
      border-active: @colors[success-active];
      text: @colors[success];
      text-hover: @colors[success-hover];
      text-active: @colors[success-active];
    };
    @danger: {
      bg: transparent;
      border: @colors[danger];
      border-hover: @colors[danger-hover];
      border-active: @colors[danger-active];
      text: @colors[danger];
      text-hover: @colors[danger-hover];
      text-active: @colors[danger-active];
    };
  };
  @text: {
    @normal: {
      text: @colors[primary];
    };
    @warning: {
      text: @colors[warning];
    };
    @success: {
      text: @colors[success];
    };
    @danger: {
      text: @colors[danger];
    };
  };
};
each(@type, .(@type-value, @type-name) {
  @type-key: replace(~"@{type-name}", "@", "");
  .@{component}.@{component}-@{type-key} {
    each(@type-value, .(@status-value, @status-name) {
      @status-key: replace(~"@{status-name}", "@", "");
      &.@{component}-status-@{status-key} {
        color: @status-value[text];
        & when(isdefined(@status-value[bg])){
          background-color: @status-value[bg];
        }
        & when(isdefined(@status-value[border])){
          border-color: @status-value[border];
        }
         &:not(.@{component}-disabled):not(.@{component}-loading) {
            &:hover {
              & when(isdefined(@status-value[hover])){
                background-color: @status-value[hover];
              }
              & when(isdefined(@status-value[text-hover])){
                color: @status-value[text-hover];
              }
              & when(isdefined(@status-value[border-hover])){
                border-color: @status-value[border-hover];
              }
            }
            &:active {
              & when(isdefined(@status-value[border-active])){
                border-color: @status-value[border-active];
              }
              & when(isdefined(@status-value[text-active])){
                color: @status-value[text-active];
              }
              & when(isdefined(@status-value[active])){
                background-color: @status-value[active];
              }
            }
          }
        & when(@type-key = text){
          background-color: transparent;
          &:not(.@{component}-disabled):not(.@{component}-loading) {
            &:hover {
              background-color: @colors[text-hover];
            }
            &:active {
              background-color: @colors[text-active];
            }
          }
        }
      }
    }
    )
  }
});
// size
@size: {
  @mini: {
    height: 24px;
    padding: 11px;
    font-size: 12px;
    margin-right: 4px;
  };
  @small: {
    height: 28px;
    padding: 15px;
    font-size: 14px;
    margin-right: 6px;
  };
  @medium: {
    height: 32px;
    padding: 15px;
    font-size: 14px;
    margin-right: 8px;
  };
  @large: {
    height: 36px;
    padding: 19px;
    font-size: 14px;
    margin-right: 8px;
  };
};
each(@size,.(@value,@name){
       @key: replace(~"@{name}", "@", "");
      .@{component}-size-@{key} {
        height: @value[height];
        padding: 0  @value[padding];
        font-size: @value[font-size];
        .@{component}-icon {
          width: @value[font-size];
          height: @value[font-size];
          margin-right: @value[margin-right];
        }
        &.@{component}-shape-circle{
          width: @value[height];
          padding: 0;
        }
      }
    });
// shape
@shape: {
  square: 2px;
  round: 30px;
  circle: 50%;
};
each(@shape, {
      .@{component}-shape-@{key} {
        border-radius: @value;
      }
});
