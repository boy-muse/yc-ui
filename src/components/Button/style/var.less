.yc-button {
    cursor: pointer;
    user-select: none;
    outline: none;
    border: 1px solid transparent;
    font-weight: 400;
    transition: all 0.1s cubic-bezier(0, 0, 1, 1);
    display: inline-flex;
    justify-content: center;
    align-items: center;
  
    .yc-button-icon {
      flex-shrink: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      .yc-spin {
        font-size: inherit;
        color: inherit;
      }
    }
  }
  
  .set-button-status(@color, @hover, @active) {
    color: @color;
    &:hover {
      color: @hover;
    }
    &:active {
      color: @active;
    }
  }
  
  .set-button-variant(@bg, @hover-bg, @active-bg, @border: transparent, @text: #fff) {
    background: @bg;
    border-color: @border;
    color: @text;
  
    &:not(.yc-button-disabled):not(.yc-button-loading) {
      &:hover {
        background: @hover-bg;
        border-color: lighten(@border, 10%);
      }
      &:active {
        background: @active-bg;
        border-color: darken(@border, 10%);
      }
    }
  }
  
  .set-button-size(@height, @padding, @font-size, @icon-size, @icon-margin) {
    height: @height;
    padding: 0 @padding;
    font-size: @font-size;
    .yc-button-icon {
      width: @icon-size;
      height: @icon-size;
      margin-right: @icon-margin;
    }
  }
  
  .set-button-shape(@radius, @width: auto) {
    border-radius: @radius;
    width: @width;
  }
  
  @status-map: {
    normal: rgb(22, 93, 255);
    warning: rgb(255, 125, 0);
    success: rgb(0, 180, 42);
    danger: rgb(245, 63, 63);
  };
  
  @variant-map: {
    primary: {
      bg: @color;
      hover: lighten(@color, 10%);
      active: darken(@color, 10%);
      text: #fff;
    };
    secondary: {
      bg: lighten(@color, 40%);
      hover: lighten(@color, 30%);
      active: lighten(@color, 20%);
      text: @color;
    };
    dashed: {
      bg: lighten(@color, 40%);
      hover: lighten(@color, 30%);
      active: lighten(@color, 20%);
      border: lighten(@color, 20%);
      text: @color;
    };
    outline: {
      bg: transparent;
      hover: transparent;
      active: transparent;
      border: @color;
      text: @color;
    };
    text: {
      bg: transparent;
      hover: rgb(242, 243, 245);
      active: rgb(229, 230, 235);
      text: @color;
    };
  };
  
  @size-map: {
    mini:   { height: 24px, padding: 11px, font: 12px, icon: 12px, margin: 4px };
    small:  { height: 28px, padding: 15px, font: 14px, icon: 14px, margin: 6px };
    medium: { height: 32px, padding: 15px, font: 14px, icon: 14px, margin: 8px };
    large:  { height: 36px, padding: 19px, font: 14px, icon: 14px, margin: 8px };
  };
  
  @shape-map: {
    circle: { radius: 50%,  width: true  };
    round:  { radius: 30px, width: false };
    square: { radius: 2px,  width: false };
  };
  
  
  each(@status-map, {
    @status: @key;
    @color: @value;
  
    // 生成每种状态的变体
    each(@variant-map, {
      @variant: @key;
      @config: @value;
  
      .yc-button.yc-button-status-@{status}.yc-button-@{variant} {
        .set-button-variant(
          @config[bg],
          @config[hover],
          @config[active],
          if(@config[border], @config[border], transparent),
          @config[text]
        );
  
        // 特殊处理 text 变体的 hover 背景
        & when (@variant = text) {
          &:not(.yc-button-disabled):not(.yc-button-loading) {
            &:hover { background: @config[hover]; }
            &:active { background: @config[active]; }
          }
        }
      }
    });
  });
  
  each(@size-map, {
    @size: @key;
    @config: @value;
  
    .yc-button-size-@{size} {
      .set-button-size(
        @config[height],
        @config[padding],
        @config[font],
        @config[icon],
        @config[margin]
      );
    }
  });
  
  each(@shape-map, {
    @shape: @key;
    @config: @value;
  
    .yc-button-shape-@{shape} {
      .set-button-shape(@config[radius]);
  
      // 圆形按钮需要设置宽度等于高度
      & when (@config[width]) {
        each(@size-map, {
          &.yc-button-size-@{key} {
            width: @value[height];
          }
        });
      }
    }
  });
  
  .yc-button-loading,
  .yc-button-disabled {
    cursor: default;
    position: relative;
  
    &::before {
      content: '';
      display: block;
      z-index: 1;
      position: absolute;
      inset: -1px;
      background-color: #fff;
      opacity: 0.4;
    }
  
    &.yc-button-disabled {
      cursor: not-allowed;
    }
  }
  
  .yc-button-long {
    width: 100%;
  }
  
  .yc-button-no-padding {
    padding: 0;
  }
  
  .yc-button-only-icon {
    padding: 0;
    .yc-button-icon {
      margin: 0;
    }
  }
  