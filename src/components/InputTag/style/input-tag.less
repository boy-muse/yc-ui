@component: yc-input-tag;
.@{component} {
  cursor: text;
  position: relative;
  width: 100%;
  background-color: rgb(242, 243, 245);
  border: 1px solid transparent;
  border-radius: 2px;
  transition:
    color 0.1s cubic-bezier(0, 0, 1, 1),
    border-color 0.1s cubic-bezier(0, 0, 1, 1),
    background-color 0.1s cubic-bezier(0, 0, 1, 1);
  color: rgb(29, 33, 41);
  font-weight: 400;
  display: inline-flex;
  align-items: center;
  &:not(.@{component}-disabled) {
    &:hover.@{component}-clear-button {
      visibility: visible;
    }
    &:hover {
      border-color: transparent;
      background-color: rgb(229, 230, 235);
    }
    &:focus-within {
      background-color: #fff;
      border-color: rgb(22, 93, 255);
      box-shadow: 0 0 0 0 rgb(190, 218, 255);
      &:deep(.@{component}-inner) {
        .yc-tag {
          border-color: transparent;
          background-color: rgb(242, 243, 245);
        }
      }
    }
  }
  .@{component}-prefix,
  .@{component}-suffix {
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: inherit;
    color: rgb(78, 89, 105);

    &.@{component}-prefix {
      padding-right: 12px;
    }
    &.@{component}-suffix {
      padding-left: 12px;
    }
  }
  .@{component}-clear-button {
    visibility: hidden;
  }
  .@{component}-mirror {
    min-width: 12px;
    position: absolute;
    top: 0;
    left: 0;
    visibility: hidden;
    font-variant: normal;
    letter-spacing: normal;
    text-indent: 0;
    text-rendering: auto;
    text-transform: none;
    white-space: pre-wrap;
    overflow-wrap: break-word;
  }
  .@{component}-inner {
    overflow: hidden;
    flex: 1;
    flex-shrink: 0;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 2px 4px;
    &:deep(.yc-tag) {
      max-width: 100%;
      &:hover {
        background-color: #fff;
      }
    }
    .@{component}-input {
      max-width: 100%;
      cursor: inherit;
      outline: none;
      border: none;
      border-radius: 0;
      background-color: transparent;
      color: inherit;
      &::placeholder {
        color: rgb(134, 144, 156);
      }
    }
  }
}
// error
.@{component}-error {
  background-color: rgb(255, 236, 232);
  &:not(.@{component}-disabled) {
    &:hover {
      border-color: transparent;
      background-color: rgb(253, 205, 197);
    }
    &:focus-within {
      background-color: #fff;
      border-color: rgb(245, 63, 63);
      box-shadow: 0 0 0 0 rgb(253, 205, 197);
    }
  }
}
//no-value has suffix
.@{component} {
  // novalue
  &.@{component}-no-value {
    padding: 0 12px;
  }
  // has-suffix
  &.@{component}-has-suffix {
    padding-right: 12px;
  }
}
// disabled
.@{component}-disabled {
  cursor: not-allowed;
  border-color: transparent;
  background-color: rgb(242, 243, 245);
  color: rgb(201, 205, 212);
  .@{component}-prefix,
  .@{component}-suffix {
    color: inherit;
  }
}
// size
@size: {
  @mini: {
    height: 24px;
    font-size: 12px;
    padding-x: 4px;
    inner-padding: 1px;
  };
  @small: {
    height: 28px;
    font-size: 14px;
    padding-x: 4px;
    inner-padding: 2px;
  };
  @medium: {
    height: 32px;
    font-size: 14px;
    padding-x: 4px;
    inner-padding: 2px;
  };
  @large: {
    height: 36px;
    font-size: 14px;
    padding-x: 6px;
    inner-padding: 2px;
  };
};
each(@size, .(@value,@name){
  @key:replace(~"@{name}", "@", "");
  .@{component}-size-@{key} {
    min-height: @value[height];
    font-size: @value[font-size];
    padding: 0 @value[padding-x];
    .@{component}-inner {
      padding: @value[inner-padding] 0;
      & when  (@key = large) {
        .yc-tag-size-large {
          min-height: 28px;
         line-height: 26px
        }
      }
    }
  }
});
