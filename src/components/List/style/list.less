@component: yc-list;
.@{component}-wrapper {
  position: relative;
  width: 100%;

  .@{component}-spin {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 24px;
    .yc-scrollbar {
      width: 100%;
      &:deep(.yc-scrollbar-container) {
        .yc-scrollbar-content {
          border-radius: 4px;
        }
      }
    }
    .@{component}-content-wrapper {
      display: flex;
      flex-direction: column;
      color: rgb(29, 33, 41);
      font-size: 14px;
      line-height: 1.5715;
      .@{component}-header {
        font-weight: 500;
        font-size: 16px;
        line-height: 1.5;
      }
      .@{component}-content {
        display: flex;
        flex-direction: column;
      }
      .@{component}-scroll-loading {
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
      }
    }
  }
}
// bordered
.@{component}-bordered {
  .yc-scrollbar {
    &:deep(.yc-scrollbar-container) {
      border: 1px solid rgb(229, 230, 235);
    }
  }
}
.@{component}-split {
  .@{component}-header {
    border-bottom: 1px solid rgb(229, 230, 235);
  }
  .@{component}-content {
    &:deep(.@{component}-item) {
      &:not(:last-child) {
        border-bottom: 1px solid rgb(229, 230, 235);
      }
    }
  }
  .@{component}-footer {
    border-top: 1px solid rgb(229, 230, 235);
  }
}
// hoverable
.@{component}-hoverable {
  &:deep(.@{component}-item) {
    &:hover {
      background-color: rgb(247, 248, 250);
    }
  }
}
//size
@size: {
  @small: {
    header-padding: 8px 20px;
    item-padding: 9px 20px;
  };
  @medium: {
    header-padding: 12px 20px;
    item-padding: 13px 20px;
  };
  @large: {
    header-padding: 16px 20px;
    item-padding: 17px 20px;
  };
};
each(@size, .(@value,@name){
    @key:replace(~"@{name}", "@", "");
    .@{component}-size-@{key} {
     .@{component}-header,.@{component}-footer,.@{component}-scroll-loading{
      padding: @value[header-padding];
     }
     &:deep(.@{component}-item){
      padding: @value[item-padding];
     }
    }
  });
