@component: yc-radio;
// radio
.@{component} {
  position: relative;
  cursor: pointer;
  padding-left: 5px;
  font-size: 14px;
  line-height: unset;
  display: inline-flex;
  align-items: center;
  gap: 8px;

  .@{component}-icon,
  .@{component}-label {
    flex-shrink: 0;
  }
  .@{component}-icon {
    position: relative;
    width: 14px;
    height: 14px;
    border: 2px solid rgb(229, 230, 235);
    border-radius: 50%;
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    &::after {
      content: '';
      display: block;
      position: absolute;
      top: 50%;
      left: 50%;
      width: 10px;
      height: 10px;
      border-radius: 50%;
      transform: translateX(-50%) translateY(-50%) scale(0);
      transition: transform 0.3s cubic-bezier(0.3, 1.3, 0.3, 1);
      background: #fff;
    }
  }
  .@{component}-label {
    user-select: none;
    flex: 1;
    color: rgb(29, 33, 41);
  }
}
// button
.@{component}-button {
  position: relative;
  display: inline-block;
  margin: 1.5px;
  color: rgb(78, 89, 105);
  background-color: transparent;
  border-radius: 2px;
  cursor: pointer;
  transition: all 0.1s cubic-bezier(0, 0, 1, 1);
  &::before {
    content: '';
    display: block;
    position: absolute;
    top: 50%;
    left: -2px;
    transform: translateY(-50%);
    background-color: rgb(229, 230, 235);
    width: 1px;
    height: 14px;
    transition: all 0.1s cubic-bezier(0, 0, 1, 1);
  }
  &:not(.@{component}-disabled) {
    &:hover {
      background-color: #fff;
      color: rgb(29, 33, 41);
    }
    &:hover::before {
      opacity: 0;
    }
    &:hover + .@{component}-button {
      &::before {
        opacity: 0;
      }
    }
  }
  .@{component}-button-content {
    display: block;
    padding: 0 12px;
  }
}
.@{component},
.@{component}-button {
  .@{component}-target {
    position: absolute;
    left: 0;
    top: 0;
    width: 0;
    height: 0;
    visibility: hidden;
  }
}

// checked
.@{component}-checked {
  &.@{component} {
    .@{component}-icon {
      border-color: transparent;
      background-color: rgb(22, 93, 255);
      &::after {
        transform: translateX(-50%) translateY(-50%) scale(0.4);
      }
    }
  }
  &.@{component}-button {
    color: rgb(22, 93, 255);
    background-color: #fff;
    &::before {
      opacity: 0;
    }
    & + .@{component}-button {
      &::before {
        opacity: 0;
      }
    }
  }
  &.@{component}-disabled {
    &.@{component} {
      .@{component}-icon {
        background-color: rgb(148, 191, 255);
        border-color: transparent;
      }
    }
    &.@{component}-button {
      color: rgb(148, 191, 255);
    }
  }
}
.@{component}-unchecked {
  &:hover .yc-icon-button {
    &::before {
      background-color: rgba(242, 243, 245);
    }
    .@{component}-icon {
      transition: border-color 0.1s cubic-bezier(0, 0, 1, 1);
      border-color: rgb(201, 205, 212);
    }
  }
}
// disabled
.@{component}-disabled {
  cursor: not-allowed;
  &.@{component} {
    .@{component}-icon {
      border-color: rgb(229, 230, 235);
      background-color: rgb(242, 243, 245);
    }
    .@{component}-label {
      color: rgb(201, 205, 212);
    }
  }
  &.@{component}-button {
    color: rgb(201, 205, 212);
  }
}

//size
@size: {
  @mini: {
    font-size: 12px;
    line-height: 18px;
  };
  @small: {
    font-size: 14px;
    line-height: 22px;
  };
  @medium: {
    font-size: 14px;
    line-height: 26px;
  };
  @large: {
    font-size: 14px;
    line-height: 30px;
  };
};
each(@size, .(@value,@name){
  @key:replace(~"@{name}", "@", "");
  .@{component}-button.@{component}-button-size-@{key} {
    font-size: @value[font-size];
    line-height: @value[line-height];
  }
});
